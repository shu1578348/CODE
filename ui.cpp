//=============================================================================
//
// タイトル画面処理 [ui.cpp]
// Author : 
//
//=============================================================================
#include "ui.h"
#include "camera.h"
#include "model.h"
#include "input.h"
#include "player.h"
#include "enemy.h"
#include "shadow.h"
#include "light.h"
#include "meshfield.h"
#include "meshwall.h"
#include "tree.h"
#include "particle.h"
#include "bullet.h"
#include "score.h"
#include "house.h"
#include "barrel.h"
#include "fence.h"
#include "stall.h"
#include "sky.h"
#include "bomb.h"
#include "fade.h"
#include "hpbar.h"
#include "spbar.h"
#include "tool.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************


//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************


//*****************************************************************************
// グローバル変数
//*****************************************************************************


//=============================================================================
// 初期化処理
//=============================================================================
HRESULT InitUi(void)
{
	InitScore();

	InitHpbar();

	InitSpbar();

	InitTool();

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void UninitUi(void)
{
	UninitScore();

	UninitHpbar();

	UninitSpbar();

	UninitTool();
}

//=============================================================================
// 更新処理
//=============================================================================
void UpdateUi(void)
{

	UpdateScore();

	UpdateHpbar();

	UpdateSpbar();

	UpdateTool();


#ifdef _DEBUG	// デバッグ情報を表示する


#endif

}

//=============================================================================
// 描画処理
//=============================================================================
void DrawUi(void)
{

	// ライティングを有効に
	SetLightEnable(FALSE);

	// Z比較あり
	SetDepthEnable(FALSE);

	DrawScore();

	DrawHpbar();

	DrawSpbar();

	DrawTool();

	// ライティングを有効に
	SetLightEnable(TRUE);

	// Z比較あり
	SetDepthEnable(TRUE);

}